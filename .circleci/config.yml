version: 2.1

jobs:
  checkoutcode:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout          
  deploy-infrastructure:
    docker:
      - image: amazon/aws-cli
      # Docker image here that supports AWS CLI amazon/aws-cli
    steps:
      # Checkout code from git      
      - run: 
          name: Install Git
          command: |
            yum update -y && yum install git -y
      - run:
          name: check git version
          command: |
            git --version
      - checkout
      - run:
          name: Ensure back-end infrastructure exists
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/backend.yml \
              --tags project=udacitycdbackend \
              --stack-name udacityproj3backend-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
              --parameter-overrides ID=123
              exit 1
      - run:
          name: Ensure front-end infrastructure exist
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/frontend.yml \
              --tags project=udacitycdfrontend \
              --stack-name udacityproj3frontend-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
              --parameter-overrides ID=123  
              exit 1
      - run:
          name: Add back-end ip to ansible inventory
          command: |
            # Your code here
            exit 1
      - persist_to_workspace:
          root: ~/
          paths:
            - project/.circleci/ansible/inventory.txt
  diagnostics:
    docker:
      - image: amazon/aws-cli
      # Docker image here that supports AWS CLI
    steps:
      - run:
          name: Diags
          command: |
            pwd
            ls -la . ..
            printenv
      # Here's where you will add some code to rollback on failure   
workflows:
  default:
    jobs:
      #- diagnostics
      - deploy-infrastructure          
          
